<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="lounge">
	<insert id="insert" parameterType="loungeVO" useGeneratedKeys="true" keyProperty="lounge_id">
		insert into lounge (lounge_id, lounge_pet_type, member_user_id, lounge_title, lounge_content, lounge_writer, lounge_date,lounge_img, lounge_replyCount)
		values (
			null,
			#{lounge_pet_type},
			#{member_user_id},
			#{lounge_title},
			#{lounge_content},
			(SELECT nickname FROM member WHERE user_id = #{member_user_id}), 
			now(),
			#{lounge_img},
			#{lounge_replyCount}
			)
	</insert>
	
	<update id="update" parameterType="loungeVO">
		update lounge 
		set 
			lounge_pet_type = #{lounge_pet_type},
			lounge_title = #{lounge_title},
			lounge_content = #{lounge_content},
			lounge_img = #{lounge_img},
			lounge_date = now()
		where lounge_id = #{lounge_id}
	</update>
	
	<delete id="delete" parameterType="loungeVO">
		delete from lounge where lounge_id = #{lounge_id}
	</delete>
	
	<select id="one" parameterType="int" resultType="loungeVO">
	 	select L.*,
       		count(Ll.like_id) as likeCount,
	       	(select if((select count(*) 
	       	from lounge_like
	       	where member_user_id = #{member_user_id}
	       	and lounge_id = #{lounge_id}) = 0, 'N', 'Y')
	       	) as likeYn
        from lounge AS L
        left join lounge_like as Ll on L.lounge_id = Ll.lounge_id
        where L.lounge_id = #{lounge_id}               
	</select>
	
		
	<select id="list" parameterType="loungePageVO" resultType="loungeVO">
    select * 
    from
        (select row_number() over(order by L.lounge_id desc) as lounge_no,
             L.lounge_id, L.member_user_id , L.lounge_pet_type, L.lounge_title, L.lounge_content, 
             L.lounge_writer, L.lounge_img , L.lounge_date, L.lounge_replyCount, COUNT(Ll.like_id) as likeCount
         from lounge AS L
             left join lounge_like as Ll on L.lounge_id = Ll.lounge_id
         <choose>
             <when test="searchType eq 'all'">
                 where L.lounge_title like CONCAT('%',#{keyWord},'%')
                     or L.lounge_content like CONCAT('%', #{keyWord}, '%')
                     or L.lounge_writer like CONCAT('%', #{keyWord}, '%')
             </when>
             <when test="searchType eq 'titleContent'">
                 where L.lounge_title like CONCAT('%', #{keyWord}, '%') 
                     or L.lounge_content like CONCAT('%', #{keyWord}, '%')
             </when>
             <when test="searchType eq 'writer'">
                 where L.lounge_writer like CONCAT('%', #{keyWord}, '%')
             </when>
         </choose>
         group by L.lounge_id, L.member_user_id, L.lounge_pet_type, L.lounge_title, L.lounge_content, L.lounge_writer, L.lounge_img , L.lounge_date, L.lounge_replyCount) l2
     	 where l2.lounge_no between #{start} and #{end}
     	 order by l2.lounge_no;
	</select>
	  
		
	<select id="countAll" resultType="int">
			select count(*) from lounge		
	</select>
	
	
	<select id="countSearch" resultType="int" parameterType="map">
			select count(*) from lounge
	    	 where 
    		<choose>
			<when test="searchType eq 'all'">
				lounge_title like CONCAT('%',#{keyWord},'%')
				or lounge_content like CONCAT('%', #{keyWord}, '%')
				or lounge_writer like CONCAT('%', #{keyWord}, '%')
			</when>
			<when test="searchType eq 'titleContent'">
				lounge_title like CONCAT('%', #{keyWord}, '%')
				or lounge_content like CONCAT('%', #{keyWord}, '%')
			</when>
			<when test="searchType eq 'reply'">
				reply_column like CONCAT('%', #{keyWord}, '%')
		    </when>
 		    <when test="searchType eq 'writer'">
		         lounge_writer like CONCAT('%', #{keyWord}, '%')
 		    </when>
 		    <otherwise>
 		         1=1
 		    </otherwise>
  		  </choose>
	</select>
	
	<update id="replyCount" parameterType="map">
		UPDATE lounge 
		SET lounge_replyCount = lounge_replyCount + #{rpCntUpDown}
		WHERE lounge_id = #{lounge_id} 
	</update>
	
	<select id="bestList" resultType="loungeVO">
	SELECT L.*, COUNT(LL.like_id) AS likeCount
	FROM lounge L
	LEFT JOIN lounge_like LL ON L.lounge_id = LL.lounge_id
	WHERE L.lounge_date >= CURDATE() - INTERVAL 7 DAY
	GROUP BY L.lounge_id
	HAVING likeCount >= 5
	ORDER BY likeCount DESC;	
	</select>

</mapper>